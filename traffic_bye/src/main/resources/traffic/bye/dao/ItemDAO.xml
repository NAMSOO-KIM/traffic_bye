<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="traffic.bye.dao.ItemDAO">

	
	<select id="getItemList" resultType="ItemVO">
	<![CDATA[
		select s.name as store_name , it.*
		from item it
		inner join store s
		on it.store_id = s.id
	]]>
	</select>
	
	<select id="getItemDetail" parameterType="long" resultType="ItemVO">
	<![CDATA[
		select *
		from ITEM it
		left join item_image im
		on it.ID = im.ITEM_ID
		where it.id = #{id}
	]]>
	</select>
	
	<parameterMap type="java.util.HashMap" id="selectRelatedMap">
		<parameter property="category_id" jdbcType="NUMERIC" mode="IN" />
		<parameter property="id" jdbcType="NUMERIC" mode="IN" />
	</parameterMap>
	
	<select id="getRelatedItemList" parameterMap="selectRelatedMap" resultType="ItemVO">
	<![CDATA[
		
		select s.name as store_name, A.*
		FROM 
		(
		    select *
		    from item
		    where category_id = #{category_id} and id != #{id}
    	)A
		inner join store s
		on s.id = A.store_id

	]]>
	</select>
	
	<select id="getMainCategoryItemList" parameterType="long" resultType="ItemVO">
	<![CDATA[
		SELECT s.name as store_name , A.*
		FROM (SELECT *
    		from item it
    		where category_id in 
       		(
        		select id
        		from category
        		where parent_id = #{parent_id}
        	)
    		)A
		INNER JOIN STORE s 
		on s.id = A.store_id
		
	]]>
	</select>
	
	<select id="getItem" parameterType="long" resultType="ItemVO">
	<![CDATA[
		select *
		from ITEM
		where id = #{id}
	]]>
	</select>
	
	<parameterMap type="java.util.HashMap" id="isRelatedMap">
		<parameter property="category_id" jdbcType="NUMERIC" mode="IN" />
		<parameter property="id" jdbcType="NUMERIC" mode="IN" />
	</parameterMap>
	
	<select id="isRelatedItem" parameterMap="isRelatedMap" resultType="int">
	<![CDATA[
		
		select count(*)
		from team2.item
		where category_id = #{category_id} and id != #{id}

	]]>
	</select>
	

	<select id="getItemFromStore" parameterType="long" resultType="ItemVO">
	<![CDATA[
		select id, category_id, name, stock, price, detail, thumb_file_url
		from team2.item
		where store_id = #{store_id}
	]]>
	</select>

	<select id="getMediumCategoryItemList" parameterType="long" resultType="ItemVO">
	<![CDATA[
		SELECT s.name as store_name , A.*
		FROM (SELECT *
    		from item it
    		where it.category_id = #{category_id}
    		)A
		INNER JOIN STORE s 
		on s.id = A.store_id
	]]>
	</select>
	
	

	<insert id="addItem" parameterType="ItemAddVO">
		insert into item(id, category_id, name, stock, price, detail, store_id, repre_file, thumb_file_url) values(item_id_seq.nextval, #{midCategory}, #{name}, #{stock}, #{price}, #{detail}, #{storeId}, #{repreFile}, #{thumbFileURL, jdbcType = VARCHAR })	
	
		<selectKey keyProperty="id" resultType="Long" order="AFTER">
			select item_id_seq.currval from dual
		</selectKey>
	</insert>
	
	<insert id="addItemImages" parameterType="java.util.List">
		<foreach collection="list" item="image" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
			 into item_image 
			values (#{image.itemId}, #{image.uploadFileName}, #{image.realFileName}, #{image.originFileURL}, #{image.thumbFileURL})			
		</foreach>
	</insert>
	
	<select id="getMainCategoryNewItemList" parameterType="long" resultType="ItemVO">
	<![CDATA[
		SELECT s.name as store_name , A.*
		FROM (SELECT *
    		from item it
    		where category_id in 
       		(
        		select id
        		from category
        		where parent_id = #{parent_id}
        	)
    		)A
		INNER JOIN STORE s 
		on s.id = A.store_id
		order by A.id desc

	]]>
	</select>
	
	<select id="getItemDetailWithoutImage" resultType="ItemDetailVO" parameterType="Long">
		select item.id id, item.name, stock, price, detail, repre_file repreFile, thumb_file_URL thumbFileURL, category.id categoryId, category.parent_id parentCategoryId from item join category on item.id = #{id} and item.category_id = category.id
	</select>
	
	<select id="getImage" resultType="ImageVO" parameterType="Long">
		select item_id itemId, upload_file_name uploadFileName, real_file_name realFileName, origin_file_url originFileURL from item_image where item_id = #{id}
	</select>
	
</mapper>
